export function reverseBits(n: number): number {
    // 循环处理
    let res = 0;
    for (let i = 0; i < 32; i++) {
        // res 向左移动一位
        res <<= 1;
        // n & 1 => 获取 n 最后一位
        /**
         * & 一假则假
         *  1001
         * &
         *  0001
         * -----
         *  0001
         */
        res += (n & 1);

        // n 向右移动一位
        n >>= 1;
    }

    // >>> 无符号右移, 用 0 填充左侧空出来的位置
    // >> 右移时, 用符号位填充左侧空出的位置
    return res >>> 0;

    // 利用分治法, 部分交换, 最终达到翻转字符的目的

    // 交换前后 16 位
    // 1111 1111 1111 1111 1111 1111 1111 1101
    // n = (n >>> 16) | (n << 16)
    // return n
}
